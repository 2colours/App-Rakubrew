#!/usr/bin/env perl
use strict;
use App::Rakubrew;


my $app = App::Rakubrew->new(@ARGV);
$app->run_script();


__END__

=head1 NAME

<%brew_name%> - Raku environment manager

=head1 SYNOPSIS

 <%brew_name%> version          # or <%brew_name%> current
 <%brew_name%> versions         # or <%brew_name%> list
 <%brew_name%> global [version] # or <%brew_name%> switch [<version>]
 <%brew_name%> shell [--unset|<version>]
 <%brew_name%> local [<version>]
 <%brew_name%> nuke [<version>] # or <%brew_name%> unregister [<version>]
 <%brew_name%> rehash

 <%brew_name%> available        # or <%brew_name%> list-available
 <%brew_name%> build [<%backends%>] [<tag>|<branch>|<sha-1>] [--configure-opts=<options>]
 <%brew_name%> triple [<rakudo-version> [<nqp-version> [<moar-version>]]]
 <%brew_name%> register <name> <path>
 <%brew_name%> build-zef
 <%brew_name%> download [<%backends%>] [<rakudo-version>]

 <%brew_name%> exec <executable> [<executable-args>]
 <%brew_name%> which <executable>
 <%brew_name%> whence [--path] <executable>
 <%brew_name%> mode [env|shim]
 <%brew_name%> self-upgrade
 <%brew_name%> init

 <%brew_name%> test [<version>|all]

 <%brew_name%> help [--verbose|<command>]


=head1 COMMAND: version

Usage: <%brew_name%> version|current <version>

Show the currently active Rakudo version.

=head1 COMMAND: current

Usage: <%brew_name%> version|current <version>

Show the currently active Rakudo version.

=head1 COMMAND: versions

Usage: <%brew_name%> versions|list <version>

List all installed Rakudo installations.
The currently active Rakudo installation is marked with a star at the beginning
of the line.

=head1 COMMAND: list

Usage: <%brew_name%> versions|list <version>

List all installed Rakudo installations.
The currently active Rakudo installation is marked with a star at the beginning
of the line.

=head1 COMMAND: global

Usage: <%brew_name%> global|switch <version>

Show or set the globally configured Rakudo version.

=head1 COMMAND: switch

Usage: <%brew_name%> global|switch <version>

Show or set the globally configured Rakudo version.

=head1 COMMAND: shell

Usage: <%brew_name%> shell [--unset|<version>]

Show, set or unset the shell version.

=head1 COMMAND: local

Usage: <%brew_name%> local [--unset|<version>]

Show, set or unset the local version.

=head1 COMMAND: nuke

Usage: <%brew_name%> nuke|unregister [<version>]

Removes an installed or registered version. Versions built by <%brew_name%> are
actually deleted, registered versions are only unregistered but not deleted.

=head1 COMMAND: unregister

Usage: <%brew_name%> nuke|unregister [<version>]

Removes an installed or registered version. Versions built by <%brew_name%> are
actually deleted, registered versions are only unregistered but not deleted.

=head1 COMMAND: rehash

Usage: <%brew_name%> rehash

Regenerate all shims. Newly installed scripts will not work unless this is
called. This is only necessary in C<shim> mode.

=head1 COMMAND: available

Usage: <%brew_name%> available|list-available

List all Rakudo versions that can be installed.
Installed versions will be marked with an asterisk at the beginning of the line.
Releases marked with a 'D' have a precompiled archive available and can be
downloaded and installed without compilation with the C<download> subcommand.

=head1 COMMAND: list-available

Usage: <%brew_name%> available|list-available

List all Rakudo versions that can be installed.
Installed versions will be marked with an asterisk at the beginning of the line.
Releases marked with a 'D' have a precompiled archive available and can be
downloaded and installed without compilation with the C<download> subcommand.

=head1 COMMAND: build-rakudo

Usage: <%brew_name%> build[-rakudo] [<%backends%>] [<tag>|<branch>|<sha-1>] [--configure-opts=<options>]

Download, compile and install a rakudo version.
Please note that this can take a while, be patient.

The arguments are:

=over

=item *

The backend

=over

=item *

C<moar-blead> is the moar and nqp backends at the master branch.

=item *

C<all> will build all backends.

=back

=item *

The version to build. Call C<available> to see a list of available
versions. When left empty the latest release is built.
It is also possible to specify a tag, branch name or commit sha to build.

=item *

Configure options.

=back

=head1 COMMAND: triple

Usage: <%brew_name%> triple [<rakudo-version> [<nqp-version> [<moar-version>]]]

Build a specific set of Rakudo, NQP and MoarVM commits. If you don't specify a
version the latest one will be used.

=head1 COMMAND: register

Usage: <%brew_name%> register <name> <path>

Register an externaly built / installed Rakudo version with <%brew_name%>.

=head1 COMMAND: build-zef

Usage: <%brew_name%> build-zef

Install Zef into the current Rakudo version.

=head1 COMMAND: download-rakudo

Usage: <%brew_name%> download[-rakudo] [<%backends%>] [<rakudo-version>]

Download and install a precompiled release archive.

=head1 COMMAND: exec

Usage: <%brew_name%> exec <executable> [<executable-args>]

Explicitly call an executable. You normally shouldn't need to do this.

=head1 COMMAND: which

Usage: <%brew_name%> which <executable>

Show the full path of the executable.

=head1 COMMAND: whence

Usage: <%brew_name%> whence [--path] <executable>

List all versions that contain the given executable. when C<--path> is given the
path of the executables is given instead.

=head1 COMMAND: mode

Usage: <%brew_name%> mode [env|shim]

Show or set the mode of operation.

=head1 COMMAND: self-upgrade

Usage: <%brew_name%> self-upgrade

Upgrade <%brew_name%> itself.

=head1 COMMAND: init

Usage: <%brew_name%> init

Show installation instructions.

=head1 COMMAND: test

Usage: <%brew_name%> test [<version>|all]

Run Rakudo tests aka C<make test> in the current, given or all installed
versions.

=cut
